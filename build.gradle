buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
	}
}

plugins {
    id 'net.ltgt.apt' version '0.10'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
	baseName = 'pantry'
	version =  '0.1.0'
}

repositories {
	mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")

	// JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring Security for Tokenization
	compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.security:spring-security-oauth2-client'
	compile 'org.springframework.security:spring-security-test'
    compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.6.RELEASE'
	compile 'io.jsonwebtoken:jjwt-api:0.10.5'

    runtime 'io.jsonwebtoken:jjwt-impl:0.10.5',
            'io.jsonwebtoken:jjwt-jackson:0.10.5'


	// Swagger gives basic rest api documentation
	compile "io.springfox:springfox-swagger2:2.9.2"
	compile "io.springfox:springfox-swagger-ui:2.0.2"

	// Use MySQL Connector-J
	compile 'mysql:mysql-connector-java'

	testCompile('org.springframework.boot:spring-boot-starter-test')

    compileOnly 'org.projectlombok:lombok:1.18.4'

    apt 'org.projectlombok:lombok:1.18.4'
}